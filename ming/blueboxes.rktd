24713
((3) 0 () 11 ((q lib "ming/racket/base.rkt") (q lib "ming/racket/list.rkt") (q lib "ming/racket/vector.rkt") (q lib "ming/racket/string.rkt") (q lib "ming/hash.rkt") (q lib "ming/kernel.rkt") (q lib "ming/string.rkt") (q lib "ming/list.rkt") (q lib "ming/vector.rkt") (q lib "ming/racket/hash.rkt") (q lib "ming/number.rkt")) () (h ! (equal) ((c def c (c (? . 0) q 􏿰􏺇)) q (42862 . 2)) ((c def c (c (? . 0) q 句化米)) q (18707 . 2)) ((c def c (c (? . 0) q 右垎)) q (25452 . 2)) ((c def c (c (? . 1) q 佫之􏺗)) q (31831 . 2)) ((c def c (c (? . 0) q 􏹐)) q (17254 . 2)) ((c def c (c (? . 0) q 􏿴化􏻿)) q (34397 . 2)) ((c def c (c (? . 0) q 入)) q (52946 . 2)) ((c def c (c (? . 0) q 􏽿^)) q (40322 . 2)) ((c def c (c (? . 0) q 􏾏?)) q (39396 . 2)) ((c def c (c (? . 0) q 丫)) q (52376 . 2)) ((c def c (c (? . 0) q 􏼅𰅡)) q (48125 . 2)) ((c def c (c (? . 0) q 数化字)) q (43936 . 2)) ((c def c (c (? . 0) q 阳之阴阳)) q (26043 . 2)) ((c def c (c (? . 1) q 􏿴/组合)) q (31585 . 2)) ((c def c (c (? . 0) q 􏾃?)) q (53526 . 2)) ((c def c (c (? . 0) q 阳之阴)) q (25661 . 2)) ((c def c (c (? . 0) q 阴)) q (22722 . 2)) ((c def c (c (? . 2) q 􏻿􏹇)) q (35709 . 2)) ((c def c (c (? . 0) q 􏻚?)) q (15533 . 2)) ((c def c (c (? . 7) q 􏾘^)) q (9742 . 4)) ((c def c (c (? . 0) q 􏷱)) q (25200 . 2)) ((c def c (c (? . 0) q 􏹷)) q (50580 . 2)) ((c def c (c (? . 0) q 􏹋/侗)) q (24474 . 2)) ((c def c (c (? . 0) q ?􏺃司)) q (51136 . 2)) ((c def c (c (? . 0) q 句<=?)) q (48792 . 2)) ((c def c (c (? . 0) q 釆?)) q (14937 . 2)) ((c def c (c (? . 3) q 􏼂)) q (49498 . 2)) ((c def c (c (? . 0) q 􏻧化)) q (15983 . 2)) ((c def c (c (? . 2) q 􏻿佫之􏺘)) q (35877 . 2)) ((c def c (c (? . 0) q ?极式复数度???)) q (18598 . 2)) ((c def c (c (? . 0) q ?syntax-binding-set->syntax)) q (51659 . 3)) ((c def c (c (? . 6) q 􏸵)) q (12137 . 3)) ((c def c (c (? . 0) q 字>=?)) q (44219 . 2)) ((c def c (c (? . 1) q 􏿴/排列组合)) q (31639 . 2)) ((c def c (c (? . 2) q 􏻿𠆯)) q (36094 . 2)) ((c def c (c (? . 1) q 乙)) q (27480 . 2)) ((c def c (c (? . 0) q 􏾎?)) q (39307 . 2)) ((c def c (c (? . 0) q >=)) q (17590 . 2)) ((c def c (c (? . 0) q 无)) q (54059 . 2)) ((c def c (c (? . 3) q 􏼩)) q (49690 . 2)) ((c def c (c (? . 0) q 句ci<?)) q (48977 . 2)) ((c def c (c (? . 0) q 字?/符号)) q (44787 . 2)) ((c def c (c (? . 0) q 字<?)) q (44091 . 2)) ((c def c (c (? . 0) q 字?/whitespace)) q (44957 . 2)) ((c def c (c (? . 0) q 􏾆^)) q (39909 . 2)) ((c def c (c (? . 0) q 名)) q (53039 . 2)) ((c def c (c (? . 3) q 􏼸?)) q (50286 . 2)) ((c def c (c (? . 0) q 􏻼)) q (33964 . 2)) ((c def c (c (? . 0) q 􏾋)) q (38679 . 2)) ((c def c (c (? . 0) q 􏻺𰅡)) q (34575 . 2)) ((c def c (c (? . 1) q 䢼分)) q (30189 . 2)) ((c def c (c (? . 0) q 糢)) q (16601 . 2)) ((c def c (c (? . 0) q 􏿝)) q (23451 . 2)) ((c def c (c (? . 0) q 􏿰)) q (38628 . 2)) ((c def c (c (? . 0) q ?generate-temporaries)) q (51978 . 2)) ((c def c (c (? . 0) q 􏼘)) q (47712 . 2)) ((c def c (c (? . 4) q 􏽨?)) q (11585 . 3)) ((c def c (c (? . 1) q 􏿴序列/排列组合)) q (31762 . 2)) ((c def c (c (? . 4) q 􏽡?)) q (11735 . 3)) ((c def c (c (? . 0) q 􏸟)) q (52462 . 2)) ((c def c (c (? . 0) q 肖)) q (52588 . 2)) ((c def c (c (? . 0) q 字?/小写)) q (44562 . 2)) ((c def c (c (? . 9) q 􏿰并)) q (43692 . 2)) ((c def c (c (? . 0) q 􏻵?)) q (43216 . 2)) ((c def c (c (? . 0) q 􏾋^)) q (39640 . 2)) ((c def c (c (? . 2) q 􏻿􏷴)) q (35431 . 2)) ((c def c (c (? . 1) q 􏹈巨)) q (31064 . 2)) ((c def c (c (? . 1) q 􏿴序列/组合)) q (31699 . 2)) ((c def c (c (? . 0) q <=)) q (17642 . 2)) ((c def c (c (? . 0) q 􏹊^/侗)) q (24130 . 2)) ((c def c (c (? . 0) q 􏿰􏽗)) q (42290 . 2)) ((c def c (c (? . 1) q 𨚞分)) q (29614 . 2)) ((c def c (c (? . 0) q 􏺗)) q (16835 . 2)) ((c def c (c (? . 0) q 𥺌)) q (16475 . 2)) ((c def c (c (? . 0) q ?􏿰引日月)) q (43556 . 2)) ((c def c (c (? . 0) q 􏿰巨)) q (43168 . 2)) ((c def c (c (? . 0) q ?identifier-prune-lexical-context)) q (52050 . 3)) ((c def c (c (? . 0) q 􏻿􏾩/以􏾝)) q (34678 . 2)) ((c def c (c (? . 0) q 􏻿?)) q (33809 . 2)) ((c def c (c (? . 0) q 陈)) q (53810 . 2)) ((c def c (c (? . 0) q 􏺃)) q (50377 . 2)) ((c def c (c (? . 4) q 􏽛?)) q (11035 . 3)) ((c def c (c (? . 0) q 弔)) q (23246 . 2)) ((c def c (c (? . 0) q 􏹌)) q (24867 . 2)) ((c def c (c (? . 0) q -)) q (16313 . 2)) ((c def c (c (? . 1) q 􏾺)) q (28768 . 2)) ((c def c (c (? . 1) q 􏿴/笛卡尔积)) q (31999 . 2)) ((c def c (c (? . 0) q 􏾏^)) q (40124 . 2)) ((c def c (c (? . 0) q 􏸘)) q (53316 . 2)) ((c def c (c (? . 0) q 行陈)) q (53851 . 2)) ((c form c (c (? . 5) q 􏸞)) q (9394 . 2)) ((c def c (c (? . 2) q 􏻿􏾺分)) q (35487 . 2)) ((c def c (c (? . 0) q 􏾋?)) q (39119 . 2)) ((c def c (c (? . 0) q 􏼲)) q (48494 . 2)) ((c def c (c (? . 0) q 字?/英)) q (44507 . 2)) ((c def c (c (? . 0) q 􏿰日?)) q (41867 . 2)) ((c def c (c (? . 0) q 􏾊?)) q (39188 . 2)) ((c def c (c (? . 0) q ?syntax-binding-set)) q (51591 . 2)) ((c def c (c (? . 0) q ?余弦)) q (18047 . 2)) ((c def c (c (? . 0) q 令)) q (53079 . 2)) ((c form c (c (? . 5) q 􏸫)) q (9312 . 2)) ((c def c (c (? . 0) q 􏻺)) q (33867 . 2)) ((c def c (c (? . 0) q 􏿰𫼛)) q (41635 . 4)) ((c def c (c (? . 6) q 􏽀)) q (11885 . 3)) ((c def c (c (? . 0) q 􏻿巨)) q (34053 . 2)) ((c def c (c (? . 0) q 􏿰攸/入)) q (40902 . 2)) ((c def c (c (? . 0) q 􏾅^)) q (39981 . 2)) ((c def c (c (? . 4) q 􏾌)) q (10683 . 3)) ((c def c (c (? . 0) q 􏿰化􏿳)) q (42967 . 2)) ((c def c (c (? . 1) q 丁)) q (27641 . 2)) ((c def c (c (? . 0) q 字?/象形)) q (44902 . 2)) ((c def c (c (? . 0) q 􏻛?)) q (15456 . 2)) ((c def c (c (? . 0) q 􏾗?)) q (53477 . 2)) ((c def c (c (? . 0) q 􏾉?)) q (39248 . 2)) ((c def c (c (? . 0) q ?粊化)) q (17407 . 2)) ((c def c (c (? . 0) q 􏾌?)) q (39057 . 2)) ((c def c (c (? . 4) q 􏽢?)) q (11685 . 3)) ((c def c (c (? . 0) q 字=?)) q (44049 . 2)) ((c def c (c (? . 0) q 无?)) q (54019 . 2)) ((c def c (c (? . 0) q 勾?)) q (46359 . 2)) ((c def c (c (? . 0) q 阴之阳阴阴)) q (27217 . 2)) ((c def c (c (? . 0) q ?分母)) q (17358 . 2)) ((c def c (c (? . 1) q 􏹁)) q (28691 . 2)) ((c def c (c (? . 2) q 􏻿佫之􏺗)) q (35819 . 2)) ((c def c (c (? . 0) q 句>=?)) q (48882 . 2)) ((c def c (c (? . 2) q 􏻹)) q (35227 . 2)) ((c def c (c (? . 0) q 􏿰𠛮)) q (42167 . 2)) ((c def c (c (? . 0) q ?反正切)) q (18223 . 2)) ((c def c (c (? . 0) q ?syntax-shift-phase-level)) q (51898 . 2)) ((c form c (c (? . 5) q 􏸧)) q (9254 . 2)) ((c def c (c (? . 0) q 􏿰弔)) q (41266 . 3)) ((c def c (c (? . 0) q 粊?)) q (14253 . 3)) ((c def c (c (? . 4) q 􏽜?)) q (10985 . 3)) ((c def c (c (? . 7) q 􏿳?)) q (10353 . 3)) ((c def c (c (? . 0) q 􏹹)) q (50786 . 2)) ((c def c (c (? . 0) q 􏺠?)) q (14785 . 2)) ((c def c (c (? . 0) q 􏻿)) q (33756 . 2)) ((c def c (c (? . 0) q 𡌶0)) q (52779 . 2)) ((c def c (c (? . 0) q 双?)) q (22613 . 2)) ((c def c (c (? . 0) q 􏿰􏾘)) q (41945 . 2)) ((c def c (c (? . 6) q 􏽁?)) q (12037 . 3)) ((c def c (c (? . 6) q 􏻷?)) q (12087 . 3)) ((c def c (c (? . 0) q 􏼅)) q (47388 . 2)) ((c def c (c (? . 0) q 宩?)) q (14162 . 2)) ((c def c (c (? . 0) q 阴之阳阳)) q (26458 . 2)) ((c def c (c (? . 0) q 侗?)) q (53566 . 2)) ((c def c (c (? . 4) q 􏽪?)) q (11485 . 3)) ((c def c (c (? . 0) q 􏹈)) q (24951 . 2)) ((c def c (c (? . 0) q 字?/标题)) q (44678 . 2)) ((c def c (c (? . 1) q 􏷴/入)) q (29414 . 2)) ((c def c (c (? . 0) q ?datum-intern-literal)) q (51826 . 2)) ((c def c (c (? . 0) q ?正切)) q (18089 . 2)) ((c def c (c (? . 0) q 􏹓)) q (17045 . 2)) ((c def c (c (? . 0) q 􏽉)) q (16714 . 2)) ((c def c (c (? . 8) q 􏻽?)) q (10575 . 3)) ((c def c (c (? . 0) q 􏿰􏽙)) q (41471 . 2)) ((c def c (c (? . 1) q 􏷴)) q (29071 . 2)) ((c def c (c (? . 1) q 䢼)) q (29990 . 2)) ((c def c (c (? . 0) q 同?)) q (53436 . 2)) ((c def c (c (? . 2) q 􏻿􏾝)) q (35607 . 2)) ((c def c (c (? . 0) q 字属)) q (45258 . 2)) ((c def c (c (? . 0) q 字?/iso-control)) q (45071 . 2)) ((c def c (c (? . 0) q ?欧拉次方???)) q (17915 . 2)) ((c def c (c (? . 0) q 􏺃?)) q (50432 . 2)) ((c def c (c (? . 0) q 字?)) q (43843 . 2)) ((c def c (c (? . 0) q 􏿰􏺈)) q (42759 . 2)) ((c def c (c (? . 0) q 宩化􏹔句)) q (18761 . 2)) ((c def c (c (? . 0) q 􏿰􏾩+)) q (41079 . 2)) ((c def c (c (? . 0) q 􏻥?)) q (14852 . 2)) ((c def c (c (? . 4) q 􏽠?)) q (11785 . 3)) ((c def c (c (? . 0) q 􏻧?)) q (15737 . 2)) ((c def c (c (? . 0) q 􏻝?)) q (15014 . 2)) ((c def c (c (? . 0) q 􏿰攸+)) q (40783 . 2)) ((c def c (c (? . 0) q ?整数平方根)) q (17739 . 2)) ((c def c (c (? . 0) q 句化􏺋)) q (46134 . 2)) ((c def c (c (? . 4) q 􏽬?)) q (11185 . 3)) ((c def c (c (? . 0) q 􏺟化)) q (16054 . 2)) ((c def c (c (? . 0) q <)) q (17549 . 2)) ((c def c (c (? . 0) q 汉字?)) q (45135 . 2)) ((c def c (c (? . 0) q 􏽀化)) q (47907 . 2)) ((c def c (c (? . 0) q 字大写化)) q (45405 . 2)) ((c def c (c (? . 4) q 􏽦?)) q (11285 . 3)) ((c def c (c (? . 4) q 􏽣?)) q (11435 . 3)) ((c def c (c (? . 0) q 遍)) q (53897 . 2)) ((c def c (c (? . 0) q 格)) q (53604 . 2)) ((c def c (c (? . 7) q 􏹃)) q (9921 . 4)) ((c def c (c (? . 0) q ?syntax-binding-set-extend)) q (51744 . 2)) ((c def c (c (? . 1) q 攸)) q (28242 . 2)) ((c def c (c (? . 0) q 􏾉)) q (38873 . 2)) ((c def c (c (? . 0) q >)) q (17508 . 2)) ((c def c (c (? . 0) q 􏹋/􏾗)) q (24370 . 2)) ((c def c (c (? . 0) q 阳之阳阳阴)) q (26957 . 2)) ((c def c (c (? . 0) q 戈)) q (52552 . 2)) ((c def c (c (? . 0) q 阴之阴阴阴)) q (27321 . 2)) ((c def c (c (? . 1) q 𨚞分/入)) q (29800 . 2)) ((c def c (c (? . 0) q 􏹉/􏾗)) q (24665 . 2)) ((c def c (c (? . 0) q 􏹩)) q (51298 . 2)) ((c def c (c (? . 0) q 􏿰各)) q (43117 . 2)) ((c def c (c (? . 2) q 􏻸?)) q (35011 . 2)) ((c def c (c (? . 0) q 勾化句)) q (46422 . 2)) ((c def c (c (? . 4) q 􏽫?)) q (11235 . 3)) ((c def c (c (? . 0) q 􏿰攸)) q (40672 . 2)) ((c def c (c (? . 0) q 􏽼^)) q (40529 . 2)) ((c def c (c (? . 0) q 行写)) q (53683 . 2)) ((c def c (c (? . 0) q 􏺟?)) q (15862 . 2)) ((c def c (c (? . 1) q 􏹨)) q (28068 . 2)) ((c def c (c (? . 0) q 􏻞化)) q (16125 . 2)) ((c def c (c (? . 1) q 偏)) q (30498 . 2)) ((c def c (c (? . 0) q 􏿰佫)) q (42646 . 2)) ((c def c (c (? . 0) q 示)) q (53727 . 2)) ((c def c (c (? . 0) q 􏺓)) q (49242 . 2)) ((c def c (c (? . 0) q ?􏿰引月)) q (43437 . 2)) ((c def c (c (? . 0) q 固?)) q (54097 . 2)) ((c def c (c (? . 0) q 􏹊~/侗)) q (23866 . 2)) ((c def c (c (? . 0) q 􏻻)) q (34925 . 2)) ((c def c (c (? . 0) q 句ci>=?)) q (49126 . 2)) ((c def c (c (? . 3) q 􏼟?)) q (50037 . 2)) ((c def c (c (? . 0) q 􏾈^)) q (40388 . 2)) ((c def c (c (? . 0) q 􏹑)) q (17144 . 2)) ((c def c (c (? . 0) q 句=?)) q (48704 . 2)) ((c def c (c (? . 0) q 􏹊^/􏾃)) q (24076 . 2)) ((c def c (c (? . 3) q 􏸶?)) q (50102 . 2)) ((c def c (c (? . 4) q 􏽤?)) q (11385 . 3)) ((c def c (c (? . 1) q 􏹈分)) q (30954 . 2)) ((c def c (c (? . 0) q 米?)) q (13922 . 2)) ((c def c (c (? . 0) q 􏺡?)) q (14601 . 2)) ((c def c (c (? . 0) q 字<=?/ci)) q (44359 . 2)) ((c def c (c (? . 0) q 􏹉)) q (24572 . 2)) ((c def c (c (? . 0) q 𡊤)) q (53116 . 2)) ((c def c (c (? . 0) q 双)) q (22531 . 2)) ((c def c (c (? . 0) q 阳之阴阴)) q (26126 . 2)) ((c def c (c (? . 0) q /)) q (16389 . 2)) ((c def c (c (? . 8) q 􏻽)) q (10509 . 3)) ((c def c (c (? . 0) q 阳)) q (22653 . 2)) ((c def c (c (? . 2) q 􏻿􏹈巨)) q (35765 . 2)) ((c def c (c (? . 0) q 􏹄)) q (24820 . 2)) ((c def c (c (? . 0) q ?syntax-debug-info)) q (52310 . 2)) ((c def c (c (? . 0) q 阳之阳)) q (25589 . 2)) ((c def c (c (? . 0) q 􏽊)) q (16646 . 2)) ((c def c (c (? . 0) q 字=?/ci)) q (44263 . 2)) ((c def c (c (? . 0) q 􏺔)) q (49177 . 2)) ((c def c (c (? . 2) q 􏻿􏾺)) q (35275 . 2)) ((c def c (c (? . 2) q 􏻿佫)) q (35130 . 2)) ((c def c (c (? . 0) q 勺?)) q (45695 . 2)) ((c def c (c (? . 4) q 􏽥?)) q (11335 . 3)) ((c def c (c (? . 0) q 字小写化)) q (45459 . 2)) ((c def c (c (? . 0) q 􏾑化)) q (43623 . 2)) ((c def c (c (? . 7) q 􏺈)) q (10403 . 3)) ((c def c (c (? . 0) q 􏺧?)) q (15674 . 2)) ((c def c (c (? . 0) q 􏹊~/􏾃)) q (23784 . 2)) ((q def ((lib "ming/racket/keywords.rkt") 勾化􏽁)) q (46637 . 2)) ((c def c (c (? . 1) q 佫􏿝)) q (31253 . 2)) ((c def c (c (? . 0) q 􏻝化)) q (16200 . 2)) ((c def c (c (? . 1) q 􏾺分/入)) q (29710 . 2)) ((c def c (c (? . 0) q 􏹚)) q (16786 . 2)) ((c def c (c (? . 0) q 􏸗)) q (52982 . 2)) ((c def c (c (? . 0) q 句>?)) q (48838 . 2)) ((c def c (c (? . 1) q 庚)) q (27801 . 2)) ((c def c (c (? . 0) q +)) q (16275 . 2)) ((c def c (c (? . 7) q 伄^)) q (9491 . 4)) ((c def c (c (? . 0) q 空?)) q (22791 . 2)) ((c def c (c (? . 1) q 􏹇~)) q (32064 . 2)) ((c def c (c (? . 0) q 􏽁化)) q (47478 . 2)) ((q def ((lib "ming/racket/symbol.rkt") 勺化􏽁)) q (46274 . 2)) ((c def c (c (? . 7) q 仔?)) q (10151 . 4)) ((c def c (c (? . 0) q 当)) q (52626 . 2)) ((c def c (c (? . 1) q 􏿜)) q (30304 . 2)) ((c def c (c (? . 0) q ?整数平方根余数)) q (17798 . 2)) ((c def c (c (? . 7) q 􏼓)) q (10232 . 4)) ((c def c (c (? . 0) q 􏺣?)) q (14708 . 2)) ((c def c (c (? . 0) q 阳之阳阴阴)) q (27165 . 2)) ((c def c (c (? . 7) q 􏾝)) q (9579 . 5)) ((c def c (c (? . 0) q 非)) q (52702 . 2)) ((c def c (c (? . 0) q 字<=?)) q (44133 . 2)) ((c def c (c (? . 0) q 􏿰􏽘)) q (42066 . 2)) ((c def c (c (? . 0) q 􏷰)) q (25267 . 2)) ((c def c (c (? . 0) q 阴之阴阳阳)) q (26697 . 2)) ((c def c (c (? . 1) q 癸)) q (27963 . 2)) ((c def c (c (? . 0) q 􏼁)) q (48304 . 2)) ((c def c (c (? . 0) q 𠛮􏿰)) q (42393 . 2)) ((c def c (c (? . 0) q 􏻞?)) q (15132 . 2)) ((c def c (c (? . 0) q 􏻴?)) q (14424 . 2)) ((c def c (c (? . 0) q 阴之阳)) q (25733 . 2)) ((c def c (c (? . 0) q ?次方)) q (17873 . 2)) ((c def c (c (? . 0) q 􏹴)) q (51358 . 2)) ((c def c (c (? . 2) q 􏻿􏷵)) q (35381 . 2)) ((c def c (c (? . 0) q 􏾊)) q (38776 . 2)) ((c def c (c (? . 0) q ?反余弦)) q (18178 . 2)) ((c def c (c (? . 3) q 􏼥)) q (49881 . 2)) ((c def c (c (? . 1) q 􏷵)) q (28961 . 2)) ((c def c (c (? . 0) q 字>?/ci)) q (44409 . 2)) ((c def c (c (? . 0) q 􏿰􏾩/入)) q (41179 . 2)) ((c def c (c (? . 0) q 求)) q (53981 . 2)) ((c def c (c (? . 0) q 字?/标点)) q (44843 . 2)) ((c def c (c (? . 0) q 􏿴?)) q (23121 . 2)) ((c def c (c (? . 0) q 禾?)) q (53156 . 2)) ((c def c (c (? . 0) q 􏸣)) q (52412 . 2)) ((c def c (c (? . 0) q ?分子)) q (17311 . 2)) ((c def c (c (? . 0) q 句)) q (47298 . 2)) ((c def c (c (? . 0) q ?极式复数量???)) q (18539 . 2)) ((c def c (c (? . 0) q har-grapheme-step)) q (45629 . 2)) ((c def c (c (? . 0) q ?反正弦???)) q (18130 . 2)) ((c def c (c (? . 0) q 阴之阳阳阴)) q (27009 . 2)) ((c def c (c (? . 0) q 句化勺)) q (45971 . 2)) ((c def c (c (? . 0) q 字类)) q (45200 . 2)) ((c def c (c (? . 2) q 􏻿弓)) q (35935 . 2)) ((c def c (c (? . 4) q 􏾐?)) q (10835 . 3)) ((c def c (c (? . 0) q 宩)) q (18382 . 2)) ((c def c (c (? . 2) q 􏻿弓/􏾃)) q (36040 . 2)) ((c def c (c (? . 0) q 阳之阴阳阴)) q (27061 . 2)) ((c def c (c (? . 1) q 􏾺分)) q (29508 . 2)) ((c def c (c (? . 1) q 末)) q (28016 . 2)) ((c def c (c (? . 0) q 並)) q (52739 . 2)) ((c def c (c (? . 1) q 壬)) q (27910 . 2)) ((c def c (c (? . 0) q ake-known-char-range-list)) q (45323 . 2)) ((c def c (c (? . 0) q 􏻟)) q (18460 . 2)) ((c def c (c (? . 7) q 伄)) q (9417 . 4)) ((c def c (c (? . 7) q 􏺊)) q (9832 . 5)) ((c def c (c (? . 0) q 字?/大写)) q (44620 . 2)) ((c def c (c (? . 0) q 􏹉/侗)) q (24769 . 2)) ((c def c (c (? . 0) q 􏹾)) q (50914 . 2)) ((c def c (c (? . 0) q 句化勾)) q (46497 . 2)) ((c def c (c (? . 0) q 数字?)) q (44736 . 2)) ((c def c (c (? . 1) q 佫之􏺘)) q (31890 . 2)) ((c def c (c (? . 4) q 􏽧?)) q (11635 . 3)) ((c def c (c (? . 0) q 阴之阴阴阳)) q (26905 . 2)) ((c def c (c (? . 0) q 􏹋/􏾃)) q (24422 . 2)) ((c def c (c (? . 0) q ?最大公约数)) q (16945 . 2)) ((c def c (c (? . 4) q 􏾑?)) q (10785 . 3)) ((c def c (c (? . 0) q 􏻿化􏿴)) q (34315 . 2)) ((c def c (c (? . 0) q 句<?)) q (48748 . 2)) ((c def c (c (? . 1) q 􏹇)) q (30853 . 2)) ((c def c (c (? . 0) q 句􏾝)) q (47819 . 2)) ((c def c (c (? . 1) q 己)) q (27748 . 2)) ((c def c (c (? . 1) q 佫􏹈)) q (31155 . 2)) ((c def c (c (? . 7) q 􏹊)) q (10046 . 5)) ((q def ((lib "ming/racket/function.rkt") 𥟍)) q (53384 . 2)) ((c def c (c (? . 1) q 􏾺/入)) q (29160 . 2)) ((c def c (c (? . 0) q ?􏿰引)) q (43263 . 2)) ((c def c (c (? . 2) q 􏻿􏽒)) q (36144 . 2)) ((c def c (c (? . 0) q 阴之阴阴)) q (26209 . 2)) ((c def c (c (? . 0) q 􏾁^)) q (40188 . 2)) ((c def c (c (? . 0) q 􏾉^)) q (39774 . 2)) ((c def c (c (? . 0) q ?syntax-original?)) q (51072 . 2)) ((c def c (c (? . 0) q 􏿴)) q (22869 . 2)) ((c def c (c (? . 6) q 􏽁)) q (11936 . 3)) ((c def c (c (? . 1) q 􏷵/入)) q (29334 . 2)) ((c def c (c (? . 0) q 􏹲)) q (51195 . 2)) ((c def c (c (? . 0) q 􏿰?)) q (38968 . 2)) ((c def c (c (? . 7) q 偅)) q (9996 . 3)) ((c def c (c (? . 2) q 􏻿𨚞分)) q (35544 . 2)) ((c def c (c (? . 0) q 􏻓和𥺌)) q (16527 . 2)) ((c def c (c (? . 0) q 卩?)) q (50534 . 2)) ((c def c (c (? . 0) q 􏹳)) q (51461 . 2)) ((c def c (c (? . 0) q 􏻼化)) q (34479 . 2)) ((c def c (c (? . 0) q 秝)) q (53210 . 2)) ((c def c (c (? . 0) q 􏸽)) q (52890 . 2)) ((c def c (c (? . 0) q 􏾊^)) q (39707 . 2)) ((c form c (c (? . 5) q 􏸬)) q (9280 . 2)) ((c def c (c (? . 0) q 􏺘)) q (16890 . 2)) ((c def c (c (? . 0) q 􏿰^)) q (39576 . 2)) ((c def c (c (? . 2) q 􏻿弓/􏾗)) q (35986 . 2)) ((c def c (c (? . 0) q =)) q (17467 . 2)) ((c def c (c (? . 0) q 􏹊~)) q (23600 . 2)) ((c def c (c (? . 0) q 􏼳)) q (48392 . 2)) ((c def c (c (? . 3) q 􏼛)) q (49764 . 2)) ((c def c (c (? . 3) q 􏼝)) q (49980 . 2)) ((c def c (c (? . 0) q 句ci<=?)) q (49026 . 2)) ((c def c (c (? . 7) q 􏺇)) q (10456 . 3)) ((c def c (c (? . 1) q 􏾺于?)) q (29901 . 2)) ((c def c (c (? . 0) q 􏹊^/􏾗)) q (24022 . 2)) ((c def c (c (? . 0) q 阳之阴阴阴)) q (27269 . 2)) ((c def c (c (? . 0) q ?􏿰引明)) q (43497 . 2)) ((c def c (c (? . 0) q 􏺦?)) q (15610 . 2)) ((c def c (c (? . 0) q 各)) q (25030 . 2)) ((c def c (c (? . 0) q 佫)) q (25113 . 2)) ((c def c (c (? . 0) q 􏾄^)) q (40053 . 2)) ((c def c (c (? . 10) q 􏹔)) q (12235 . 3)) ((c def c (c (? . 1) q 𨚞/入)) q (29240 . 2)) ((c def c (c (? . 0) q 字标题化*)) q (45572 . 2)) ((c def c (c (? . 0) q 夈?)) q (13978 . 3)) ((c def c (c (? . 0) q 􏹊~/􏾗)) q (23702 . 2)) ((c def c (c (? . 1) q 辛)) q (27856 . 2)) ((c def c (c (? . 0) q 􏿰􏺈仔?)) q (43019 . 2)) ((c def c (c (? . 1) q 􏼏)) q (31336 . 2)) ((c def c (c (? . 0) q 字>=?/ci)) q (44457 . 2)) ((c def c (c (? . 0) q 􏻿弔)) q (34125 . 2)) ((c def c (c (? . 0) q 􏹊^)) q (23946 . 2)) ((c def c (c (? . 0) q 􏼘/以􏾝)) q (47978 . 2)) ((c def c (c (? . 0) q ?平方根)) q (17694 . 2)) ((c def c (c (? . 1) q 𰂋)) q (30401 . 2)) ((c def c (c (? . 0) q 字度/utf-8)) q (43989 . 2)) ((c def c (c (? . 1) q 𨚞)) q (28872 . 2)) ((c def c (c (? . 4) q 􏽝?)) q (10935 . 3)) ((c def c (c (? . 0) q 阴之阳阴)) q (26375 . 2)) ((c def c (c (? . 0) q 句化􏺍)) q (46047 . 2)) ((c def c (c (? . 0) q 巨)) q (23390 . 2)) ((c def c (c (? . 0) q 可􏻞?)) q (15276 . 2)) ((c def c (c (? . 2) q 􏻿挌)) q (35178 . 2)) ((c def c (c (? . 0) q 􏼄)) q (48596 . 2)) ((c def c (c (? . 4) q 􏽞?)) q (10885 . 3)) ((c def c (c (? . 0) q 􏺏?)) q (45759 . 2)) ((c def c (c (? . 2) q 􏻿𨚞)) q (35325 . 2)) ((c def c (c (? . 0) q ?􏿰引日)) q (43379 . 2)) ((c def c (c (? . 2) q 􏻿􏾩+)) q (35078 . 2)) ((c def c (c (? . 1) q 弓)) q (28421 . 2)) ((c def c (c (? . 0) q 𥥪?)) q (15339 . 2)) ((c def c (c (? . 0) q 阴之阳阴阳)) q (26801 . 2)) ((c def c (c (? . 1) q 􏿴/分组)) q (31949 . 2)) ((c def c (c (? . 4) q 􏽮?)) q (11085 . 3)) ((c def c (c (? . 0) q ?极式复数???)) q (18325 . 2)) ((c def c (c (? . 0) q ?syntax-binding-set?)) q (51521 . 2)) ((c def c (c (? . 0) q 阴之阴阳)) q (26292 . 2)) ((c def c (c (? . 0) q 阳之阴阳阳)) q (26645 . 2)) ((c def c (c (? . 1) q 𠝤)) q (30751 . 2)) ((c def c (c (? . 0) q 句ci>?)) q (49077 . 2)) ((c def c (c (? . 8) q 􏻼?)) q (10629 . 3)) ((c def c (c (? . 1) q 𰁣)) q (28574 . 2)) ((c def c (c (? . 4) q 􏽩?)) q (11535 . 3)) ((c def c (c (? . 0) q 􏼭)) q (47624 . 2)) ((c def c (c (? . 0) q 􏹵)) q (50990 . 2)) ((c def c (c (? . 0) q 􏾀^)) q (40255 . 2)) ((c def c (c (? . 0) q 勺化句)) q (45895 . 2)) ((c def c (c (? . 0) q 􏹉/􏾃)) q (24717 . 2)) ((c def c (c (? . 0) q 􏺕)) q (47562 . 2)) ((c def c (c (? . 9) q 􏿰并!)) q (43740 . 2)) ((c def c (c (? . 0) q ?identifier-prune-to-source-module)) q (52147 . 3)) ((c def c (c (? . 0) q 米化句)) q (18653 . 2)) ((c def c (c (? . 0) q ?􏿰继引)) q (43320 . 2)) ((c def c (c (? . 7) q 􏾘)) q (9672 . 4)) ((c def c (c (? . 0) q ?矩数???)) q (18268 . 2)) ((c def c (c (? . 1) q 􏼓0)) q (28138 . 2)) ((c def c (c (? . 3) q 􏼪)) q (49587 . 2)) ((c def c (c (? . 4) q 􏽭?)) q (11135 . 3)) ((c def c (c (? . 0) q 􏹅)) q (24525 . 2)) ((c def c (c (? . 4) q 􏾑)) q (10734 . 3)) ((c def c (c (? . 0) q 报参错)) q (54165 . 2)) ((c def c (c (? . 0) q 􏻓)) q (16427 . 2)) ((c form c (c (? . 5) q 􏸪)) q (9350 . 2)) ((c def c (c (? . 7) q 􏿳)) q (10302 . 3)) ((c def c (c (? . 0) q 阳之阳阳阳)) q (26541 . 2)) ((c def c (c (? . 0) q 􏹸)) q (50660 . 2)) ((c def c (c (? . 0) q 句ci=?)) q (48928 . 2)) ((c def c (c (? . 0) q ?对数)) q (17965 . 2)) ((c def c (c (? . 1) q 重)) q (30644 . 2)) ((c def c (c (? . 1) q 􏷳分)) q (30071 . 2)) ((c def c (c (? . 0) q 阴之阴)) q (25805 . 2)) ((c def c (c (? . 0) q 阳之阳阳)) q (25877 . 2)) ((c def c (c (? . 0) q 阳之阳阴阳)) q (26749 . 2)) ((c def c (c (? . 0) q 阴之阴阳阴)) q (27113 . 2)) ((c def c (c (? . 0) q 􏺓*)) q (49410 . 2)) ((c def c (c (? . 1) q 􏼏*)) q (31455 . 2)) ((c def c (c (? . 0) q 勾<?)) q (46572 . 2)) ((c def c (c (? . 2) q 􏻿􏹈)) q (35657 . 2)) ((c def c (c (? . 0) q 阳之阴阴阳)) q (26853 . 2)) ((c def c (c (? . 0) q 􏾛)) q (23544 . 2)) ((c def c (c (? . 0) q 阳之阳阴)) q (25960 . 2)) ((c def c (c (? . 0) q 字标题化)) q (45515 . 2)) ((c def c (c (? . 0) q 垎)) q (25333 . 2)) ((c def c (c (? . 6) q 􏽀?)) q (11987 . 3)) ((c def c (c (? . 10) q 〇?)) q (12186 . 3)) ((c def c (c (? . 1) q 􏹂)) q (28499 . 2)) ((c def c (c (? . 0) q 字?/blank)) q (45019 . 2)) ((c def c (c (? . 0) q 􏸾)) q (52831 . 2)) ((c def c (c (? . 0) q 􏽻^)) q (40601 . 2)) ((c def c (c (? . 0) q 􏹋)) q (24264 . 2)) ((c def c (c (? . 0) q 􏺋?)) q (45826 . 2)) ((c def c (c (? . 0) q 􏻿􏾝化􏸼)) q (34831 . 2)) ((c def c (c (? . 0) q 句?)) q (47256 . 2)) ((c def c (c (? . 0) q 􏾐^)) q (39840 . 2)) ((c def c (c (? . 0) q 􏼎)) q (23162 . 2)) ((c def c (c (? . 0) q 􏿰􏺆)) q (42521 . 2)) ((c def c (c (? . 0) q 遍/􏿴)) q (53934 . 2)) ((c def c (c (? . 0) q 􏾈?)) q (39483 . 2)) ((c def c (c (? . 0) q 写)) q (53644 . 2)) ((c def c (c (? . 1) q 丙)) q (27588 . 2)) ((c def c (c (? . 0) q 􏹒)) q (17198 . 2)) ((c def c (c (? . 0) q 空)) q (22831 . 2)) ((c def c (c (? . 0) q 字>?)) q (44177 . 2)) ((c def c (c (? . 0) q 阴之阳阳阳)) q (26593 . 2)) ((c def c (c (? . 9) q 􏿰交!)) q (43790 . 2)) ((c def c (c (? . 0) q 􏻲?)) q (14511 . 2)) ((c def c (c (? . 0) q ?正弦)) q (18006 . 2)) ((c def c (c (? . 0) q 􏼃)) q (48226 . 2)) ((c def c (c (? . 0) q 行示)) q (53766 . 2)) ((c def c (c (? . 0) q 𠆯)) q (24183 . 2)) ((c def c (c (? . 0) q *)) q (16351 . 2)) ((c def c (c (? . 0) q 􏺌)) q (46221 . 2)) ((c def c (c (? . 4) q 􏽟?)) q (11835 . 3)) ((c def c (c (? . 0) q 字<?/ci)) q (44311 . 2)) ((c def c (c (? . 1) q 􏾜)) q (30575 . 2)) ((c def c (c (? . 0) q 􏿰􏾩)) q (40987 . 2)) ((c def c (c (? . 3) q 􏼹?)) q (50195 . 2)) ((c def c (c (? . 0) q 􏿫)) q (23021 . 2)) ((c def c (c (? . 1) q 攸/入)) q (28343 . 2)) ((c def c (c (? . 0) q 夬)) q (52664 . 2)) ((c def c (c (? . 0) q 字化数)) q (43883 . 2)) ((c def c (c (? . 0) q 并)) q (52515 . 2)) ((c def c (c (? . 0) q ?syntax-recertify)) q (52246 . 2)) ((c def c (c (? . 0) q 􏻿􏾩)) q (34209 . 2)) ((c def c (c (? . 0) q 􏽽^)) q (40457 . 2)) ((c def c (c (? . 0) q ?最小公约数)) q (16995 . 2)) ((c def c (c (? . 0) q 􏺒)) q (49309 . 2)) ((c def c (c (? . 0) q 􏸕)) q (53262 . 2)) ((c def c (c (? . 1) q 甲)) q (27373 . 2)) ((c def c (c (? . 1) q 戊)) q (27695 . 2))))

-----------------------------------------------------------------------------------------------------------------------------------------
|偏旁|                        含义                         |                        进出参                        |             举例             |
-----------------------------------------------------------------------------------------------------------------------------------------
|亻 |                  相似集（类型相同且元素相似）                   |               出参数据与进参数据相比，类型相同且内容类似               |     伄、攸、𰂋、偏、􏾜、􏾛、偅、𠆯、􏹈      |
-----------------------------------------------------------------------------------------------------------------------------------------
|阝 |                 连续集（类型相同且元素连续相同）                  |            出参数据与进参数据相比，类型相同且前者是后者的一部分             |     （阴、阳）、􏾝、􏾺、𨚞、䢼、􏹋、邭      |
-----------------------------------------------------------------------------------------------------------------------------------------
|刂 |              缺失集（删除、移走、去掉部分元素之后的集合）               |             出参数据与进参数据相比，类型相同且前者是后者的子集             |        􏷵、􏷴、􏺊、𠝤、􏹇、􏹊         |
-----------------------------------------------------------------------------------------------------------------------------------------
|彐 |                     寻找（寻的简写）                      |进参数量很多，而出参数量很少且是其的子集（并非约定规则，但是“寻找”这一动作必然预示着会有这样的效果）|     􏹋、􏹉、􏹊、􏹅、􏹌、􏹈、􏹇，􏺗、􏺘      |
-----------------------------------------------------------------------------------------------------------------------------------------
|戈 |                       修改替换                        |            进参至少有三个（非约定规则，是“替换”这一动作使然）”            |             􏼥              |
-----------------------------------------------------------------------------------------------------------------------------------------
|土 |                       构建、创建                       |                     出参类型不一而多变                     |             垎              |
-----------------------------------------------------------------------------------------------------------------------------------------
|扌 |                  直接修改了原始数据（通标点!）                  |                        无出参                        |􏾩(􏻿􏾩、􏿰􏾩)、􏼘、􏽒（􏻿􏽒）、𰅡(􏻺𰅡)、􏻿􏾩/以􏾝|
-----------------------------------------------------------------------------------------------------------------------------------------
|攵 |                        修改                         |             入参为“索引数字”和“值”（“修改”这一动作使然）             |           攸、􏼘、􏿰攸           |
-----------------------------------------------------------------------------------------------------------------------------------------
|三 |                      若干个相同元素                      |                         无                         |           􏼓、􏻺、􏼅            |
|  |（道生一，一生二，二生三，三生万物。故“三”有“多”之意，进而解释为：三个（若干个）一（相同的元素））|                                                   |                            |
-----------------------------------------------------------------------------------------------------------------------------------------
|弔 |       序数（原是“索引”之意（见弔），但因索引是从零开始的序数，故在此借用之）        |                         无                         |           􏼎、􏻻、􏼄            |
-----------------------------------------------------------------------------------------------------------------------------------------
|弔 |                 视具体情况，均与“索引”之意有关                  |                 进参或出参为􏺡?（精确非负整数）                  |     弔、伄、􏾘、􏾝、􏼭、􏻿弔、􏿰弔、􏿰􏾘     |
-----------------------------------------------------------------------------------------------------------------------------------------
|毌 |                     贯穿（贯的古字）；                     |                         无                         |         􏿝、􏻹、􏼃、􏼂、􏼁、         |
-----------------------------------------------------------------------------------------------------------------------------------------
|穴 |                   空的，无值的（空的简写）                    |                         无                         |     空?、𥥪?、􏻸?、􏻵?、􏻷?、􏼟?      |
-----------------------------------------------------------------------------------------------------------------------------------------
|非 |                       否定含意                        |                         无                         |     􏼟?、𥥪?、􏻸?、􏻵?、􏻷?、􏼟?      |
-----------------------------------------------------------------------------------------------------------------------------------------
|巨 |                       测量长度                        |                     出参是米?（数字）                     |         巨、􏺕、􏻿巨、􏿰巨          |
-----------------------------------------------------------------------------------------------------------------------------------------
|米 |                     数字（数的简写）                      |                         无                         |   􏼏、米?、𥥪?、夈?、粊?、􏻛?、􏺧?、􏽊    |
-----------------------------------------------------------------------------------------------------------------------------------------
|山 |                  稳定的、内容不变的（见：固?）                  |                         无                         |           􏻼、􏾐、􏽁            |
-----------------------------------------------------------------------------------------------------------------------------------------
|氵 |                  易动的、内容可变的（见：易?）                  |                         无                         |           􏻽、􏾑、􏽀            |
-----------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------
|  规则  |       含义        |       进出参        |   举例    |
-------------------------------------------------------
| 以?结尾 |      指示出参       |      出参是布尔值      |   空?    |
-------------------------------------------------------
| 以!结尾 |对入参数据做出了直接修改（通扌） |       无出参        | 􏿰􏾘!、􏿰𠛮! |
-------------------------------------------------------
| 以~结尾 |      减轻力度       |     出参内容更加贫瘠     |  􏹊~、􏹇~  |
-------------------------------------------------------
| 以^结尾 | 加强力度（通过改变入参成􏿴）  |入参内容更加丰富且被封装进􏿴数据结构|  􏹊^、伄^  |
-------------------------------------------------------
|以/符号分割|/之后的内容是为修饰/之前的内容的|  出参数据由/之前的内容决定   |􏿴/组合、􏿴/分组|
-------------------------------------------------------

---------------------------------------------
| 规则 | 含义  |       进出参       |      举例      |
---------------------------------------------
|以分结尾|分离成复值|     出参数据为复值     |􏾺分、𨚞分、䢼分、􏷳分、􏹈分|
---------------------------------------------
|以化结尾|类型转换 |出参数据内容不变而类型作小幅度改变|   􏻼化、􏽀化、􏽁化   |
---------------------------------------------
|以化联结|类型转换 |  出参数据内容不变而类型改变  |   􏻿化􏿴、􏿴化􏻿    |
---------------------------------------------

-------------------------------------------------------------
| 规则 |       含义       |       进出参       |        举例         |
-------------------------------------------------------------
|以𰅡结尾|类型不变，数据内容直接被修改转换|出参数据内容不变而类型作小幅度改变|        􏼅𰅡         |
-------------------------------------------------------------
|包含/入|     进参为函数      |  进参并非常规数据，而是函数  |弓/入、𰁣/入、攸/入、􏾺/入、𨚞/入|
-------------------------------------------------------------
syntax
(􏸧 exprs ...)
syntax
(􏸬 arg1 exprs ...)
syntax
(􏸫 arg1 arg2 exprs ...)
syntax
(􏸪 arg1 arg2 arg3 exprs ...)
syntax
(􏸞 a b c)
procedure
(伄 LST N ...) -> 􏿴?
  LST : 􏿴?
  N : 􏺡?
procedure
(伄^ LST N-LST) -> 􏿴?
  LST : 􏿴?
  N-LST : (listof 􏺡?)
procedure
(􏾝 LST N1 N2) -> 􏿴?
  LST : 􏿴?
  N1 : 􏺡?
  N2 : 􏺡?
procedure
(􏾘 LST N) -> 􏿴?
  LST : 􏿴?
  N : 􏺡?
procedure
(􏾘^ LST N-LST) -> 􏿴?
  LST : 􏿴?
  N-LST : (listof? 􏺡?)
procedure
(􏺊 LST N M) -> 􏿴?
  LST : 􏿴?
  N : 􏺡?
  M : 􏺡?
procedure
(􏹃 LST PROC) -> 􏺡?
  LST : 􏿴?
  PROC : 程?
procedure
(偅 LST) -> 􏿴?
  LST : 􏿴?
procedure
(􏹊 V LST [PROC]) -> 􏿴?
  V : any/c
  LST : 􏿴?
  PROC : 程? = 同?
procedure
(仔? LST1 LST2) -> boolean?
  LST1 : 􏿴?
  LST2 : 􏿴?
procedure
(􏼓 V N ...) -> 􏿴?
  V : any?
  N : 􏺡?
procedure
(􏿳 V ...) -> 􏿳?
  V : any?
procedure
(􏿳? V) -> boolean?
  V : any?
procedure
(􏺈 ALST) -> 􏿴?
  ALST : 􏿳?
procedure
(􏺇 ALST) -> 􏿴?
  ALST : 􏿳?
procedure
(􏻽 V ...) -> 􏻽?
  V : 精确非负整数?
procedure
(􏻽? VEC) -> boolean?
  VEC : any?
procedure
(􏻼? VEC) -> boolean?
  VEC : any?
procedure
(􏾌 V ...) -> 􏾌?
  V : any?
procedure
(􏾑 V ...) -> 􏾑?
  V : any?
procedure
(􏾑? V) -> boolean?
  V : any?
procedure
(􏾐? V) -> boolean?
  V : any?
procedure
(􏽞? V) -> boolean?
  V : any?
procedure
(􏽝? V) -> boolean?
  V : any?
procedure
(􏽜? V) -> boolean?
  V : any?
procedure
(􏽛? V) -> boolean?
  V : any?
procedure
(􏽮? V) -> boolean?
  V : any?
procedure
(􏽭? V) -> boolean?
  V : any?
procedure
(􏽬? V) -> boolean?
  V : any?
procedure
(􏽫? V) -> boolean?
  V : any?
procedure
(􏽦? V) -> boolean?
  V : any?
procedure
(􏽥? V) -> boolean?
  V : any?
procedure
(􏽤? V) -> boolean?
  V : any?
procedure
(􏽣? V) -> boolean?
  V : any?
procedure
(􏽪? V) -> boolean?
  V : any?
procedure
(􏽩? V) -> boolean?
  V : any?
procedure
(􏽨? V) -> boolean?
  V : any?
procedure
(􏽧? V) -> boolean?
  V : any?
procedure
(􏽢? V) -> boolean?
  V : any?
procedure
(􏽡? V) -> boolean?
  V : any?
procedure
(􏽠? V) -> boolean?
  V : any?
procedure
(􏽟? V) -> boolean?
  V : any?
procedure
(􏽀 V ...) -> 􏽀?
  V : any?
procedure
(􏽁 V ...) -> 􏽁?
  V : any?
procedure
(􏽀? V) -> boolean?
  V : any?
procedure
(􏽁? V) -> boolean?
  V : any?
procedure
(􏻷? V) -> boolean?
  V : any?
procedure
(􏸵 STR) -> 句?
  STR : 句?
procedure
(〇? N) -> boolean?
  N : 米?
procedure
(􏹔 N) -> 釆?
  N : 米?

-----------------------------------------------------------
|  规则   |          含义           |           举例            |
-----------------------------------------------------------
| 下偏旁米  |         大类概念          |   米?、夈?、宩、􏻟、粊?、䉾?、􏻥?    |
-----------------------------------------------------------
| 上偏旁米  |         常用概念          |       􏻛?、􏻚?、􏺧?、􏺦?       |
-----------------------------------------------------------
|整体性结构的米|         常用概念          |        米?、􏻴?、釆?         |
-----------------------------------------------------------
|  偏旁石  |        “准确”相关         |       􏻧?、􏻲?、􏺟?，􏺡?       |
-----------------------------------------------------------
| 左偏旁米  |内部实现、运算或转化例程（进参、出参都是数字）|         􏽉、􏽊、􏺗、􏺘         |
-----------------------------------------------------------
|  偏旁􏻴  |         整数相关          |         􏹓、􏻲?、􏺡?         |
-----------------------------------------------------------
|  偏旁彡  |          近视值          |        􏹔、􏹓、􏹒、􏹑、􏹐        |
-----------------------------------------------------------
| 左偏旁立  |         精确位数          |          􏻞?、􏻝?          |
-----------------------------------------------------------
|   化   |         类型转化          |􏻧化、􏺟化， 􏻞化、􏻝化，米化句、句化米、宩化􏹔句|
-----------------------------------------------------------
汉字化
米? : 是否是数 【MORE】 = number?
汉字化
夈? : 复数?（各取偏旁得造，复数=实数+虚数；另夂是冬的简写，冬通终，故也有所有的数终归都是复数之意） 【MORE】
 = complex?
汉字化
宩? : 实数?（各取偏旁得造（与虚数相对） 【MORE】 = real?
汉字化
粊? : 有理数?（可以用两个整数之比表示的实数称为有理数（无理数用䉾表示（北是背的原形））） 【MORE】
 = rational?
汉字化
􏻴? : 整数?（各取偏旁得造：束+米） 【MORE】 = integer?
汉字化
􏻲? : 准确整数? （各取偏旁得造） 【MORE】 = exact-integer?
汉字化
􏺡? : 准确非负整数?（各取偏旁得造） 【MORE】 = exact-nonnegative-integer?
汉字化
􏺣? : 准确正整数? 【MORE】 = exact-positive-integer?
汉字化
􏺠? : 非准确实数? 【MORE】 = inexact-real?
汉字化
􏻥? : 固定数（􏻲的一种具体实现） 【MORE】 = fixnum?
汉字化
釆? : 浮点数（各取偏旁得造） 【MORE】 = flonum?
汉字化
􏻝? : 双倍精度浮点数（仿􏻞，且占用64位内存而得造） 【MORE】 = double-flonum?
汉字化
􏻞? : 单倍精度浮点数（立是位的简写，因其在实现上占用32位内存而得造） 【MORE】 = single-flonum?
汉字化
可􏻞? : 【MORE】 = single-flonum-available?
汉字化
𥥪? : 是否是0（没有任何数（空数）既是0（各取偏旁得造）） 【MORE】 = zero?
汉字化
􏻛? : 正数（各取偏旁得造） 【MORE】 = positive?
汉字化
􏻚? : 负数（各取偏旁得造） 【MORE】 = negative?
汉字化
􏺦? : 偶数（阳整数） 【MORE】 = even?
汉字化
􏺧? : 奇数（阴整数） 【MORE】 = odd?
汉字化
􏻧? : 准确数（各取偏旁得造；所有数字要么是准确数，要么不是） 【MORE】 = exact?
汉字化
􏺟? : 非准确数（各取偏旁得造；非准确数是用浮点数实现的） 【MORE】 = inexact?
汉字化
􏻧化 : 􏻜转化为􏻧 【MORE】 = inexact->exact
汉字化
􏺟化 : 􏻧转化为􏻜 【MORE】 = exact->inexact
汉字化
􏻞化 : 宩转化为􏻞 【MORE】 = real->single-flonum
汉字化
􏻝化 : 宩转化为􏻝 【MORE】 = real->double-flonum
汉字化
+ : 加 【MORE】 = +
汉字化
- : 减 【MORE】 = -
汉字化
* : 乘 【MORE】 = *
汉字化
/ : 除 【MORE】 = /
汉字化
􏻓 : 商 【MORE】 = quotient
汉字化
𥺌 : 余数 【MORE】 = remainder
汉字化
􏻓和𥺌 : 商和余数 【MORE】 = quotient/remainder
汉字化
糢 : 模 【MORE】 = modulo
汉字化
􏽊 : 加一（由增字得造） 【MORE】 = add1
汉字化
􏽉 : 减一（由损/陨字得造） 【MORE】 = sub1
汉字化
􏹚 : 绝对值 【MORE】 = abs
汉字化
􏺗 : 找出最大数 【MORE】 = max
汉字化
􏺘 : 找出最小数 【MORE】 = min
汉字化
?最大公约数 : 【MORE】 = gcd
汉字化
?最小公约数 : 【MORE】 = lcm
汉字化
􏹓 : 趋偶取整，即四舍六入五留双（奇进偶退） 【MORE】 = round
汉字化
􏹑 : 趋小取整 【MORE】 = floor
汉字化
􏹒 : 趋大取整 【MORE】 = ceiling
汉字化
􏹐 : 趋〇取整 【MORE】 = truncate
汉字化
?分子 : 【MORE】 = numerator
汉字化
?分母 : 【MORE】 = denominator
汉字化
?粊化 : 有理化 【MORE】 = rationalize
汉字化
= : 等于 【MORE】 = =
汉字化
> : 大于 【MORE】 = >
汉字化
< : 小于 【MORE】 = <
汉字化
>= : 大于或等于 【MORE】 = >=
汉字化
<= : 小于或等于 【MORE】 = <=
汉字化
?平方根 : 【MORE】 = sqrt
汉字化
?整数平方根 : 【MORE】 = integer-sqrt
汉字化
?整数平方根余数 : 【MORE】 = integer-sqrt/remainder
汉字化
?次方 : 【MORE】 = expt
汉字化
?欧拉次方??? : 【MORE】 = exp
汉字化
?对数 : 【MORE】 = log
汉字化
?正弦 : 【MORE】 = sin
汉字化
?余弦 : 【MORE】 = cons
汉字化
?正切 : 【MORE】 = tan
汉字化
?反正弦??? : 【MORE】 = asin
汉字化
?反余弦 : 【MORE】 = acos
汉字化
?反正切 : 【MORE】 = atan
汉字化
?矩数??? : 【MORE】 = make-rectangular
汉字化
?极式复数??? : 【MORE】 = make-polar
汉字化
宩 : 实数部（各取偏旁得造） 【MORE】 = real-part
汉字化
􏻟 : 虚数部（各取偏旁得造） 【MORE】 = imag-part
汉字化
?极式复数量??? : 【MORE】 = magnitude
汉字化
?极式复数度??? : 【MORE】 = angle
汉字化
米化句 : 【MORE】 = number->string
汉字化
句化米 : 【MORE】 = string->number
汉字化
宩化􏹔句 : 将宩转化成􏹔句 【MORE】 = real->decimal-string

---------------------------------------------------------------------------------
|  成字  |          含义          |           进出参            |          举例          |
---------------------------------------------------------------------------------
| 􏿴偏旁  |    构造生成规律元素所组成的􏿴     |         出参数据结构是􏿴         |       􏼓、􏼎、􏼏、􏿝        |
---------------------------------------------------------------------------------
| 左偏旁亻 |    相似集（类型相同且元素相似）    |  出参数据与进参数据相比，类型相同且内容类似   |伄、𰁣、攸、𰂋、偏、􏾜、􏾛、偅、𠆯、􏹈、仔?|
---------------------------------------------------------------------------------
| 右偏旁阝 |   连续集（类型相同且元素连续相同）   |出参数据与进参数据相比，类型相同且前者是后者的一部分|      􏾝、􏾺、𨚞、䢼、􏹋       |
---------------------------------------------------------------------------------
| 右偏旁刂 |缺失集（删除、移走、去掉部分元素之后的集合）|出参数据与进参数据相比，类型相同且前者是后者的子集 |    􏷵、􏷴、􏺊、􏾘、𠝤、􏹊、􏹇     |
---------------------------------------------------------------------------------
| 下偏旁入 |      提示入参类型，通/入      |      进参并非常规数据，而是函数       |     􏹃、􏹌、􏹅、􏹇、􏹂、􏹁      |
---------------------------------------------------------------------------------
| 左偏旁土 |     “构建”、“创建”的意思     |        出参类型不一而多变         |          垎           |
---------------------------------------------------------------------------------
|  组词  |          -           |            -             |          -           |
---------------------------------------------------------------------------------
| 以分结尾 |        分离成复值         |         出参数据为复值          |    􏾺分、𨚞分、䢼分、􏷳分、􏹈分    |
---------------------------------------------------------------------------------
|  标点  |          -           |            -             |          -           |
---------------------------------------------------------------------------------
| 以*结尾 |       加强力度至出参        |         出参内容更加丰富         |          􏼏*          |
---------------------------------------------------------------------------------
| 以~结尾 |       减轻力度至出参        |         出参内容更加贫瘠         |        􏹊~、􏹇~         |
---------------------------------------------------------------------------------
| 以^结尾 |    加强力度（通过改变入参成􏿴）    |    入参内容更加丰富且被封装进􏿴数据结构    |       􏹊^、伄^、􏾘^       |
---------------------------------------------------------------------------------
|以/符号分割|  /之后的内容是为修饰/之前的内容的   |      出参数据由/之前的内容决定       |      􏿴/组合、􏿴/分组       |
---------------------------------------------------------------------------------
|  混合  |          -           |            -             |          -           |
---------------------------------------------------------------------------------
|  /入  |        提示进参类型        |      进参并非常规数据，而是函数       |     攸/入、􏾺/入、𨚞/入      |
---------------------------------------------------------------------------------
汉字化
双 : 把两个数据配成对，即成一个双 【MORE】 = cons
汉字化
双? : 【MORE】 = pair?
汉字化
阳 : 返回双中的第一个数据 【MORE】 = car
汉字化
阴 : 返回双中的第二个数据 【MORE】 = cdr
汉字化
空? : 【MORE】 = null?
汉字化
空 : 【MORE】 = null
汉字化
􏿴 : 将一个双的阴位放置另一个双，数个双如此前后相接组成链状（末尾双的阴位留空） 【MORE】 = list
汉字化
􏿫 : 与􏿴类似的数据结构，但不同的是结尾无空 【MORE】 = list*
汉字化
􏿴? : 【MORE】 = list?
汉字化
􏼎 : 构造内容是一系列序数的􏿴 【MORE】 = build-list
汉字化
弔 : 返回􏿴的第N个元素（从0起），即以􏿴中的序号为参数来索引出相应的元素 【MORE】 = list-ref
汉字化
巨 : 返回􏿴的长度 【MORE】 = length
汉字化
􏿝 : 把多􏿴贯穿相连组成一个􏿴并返回之 【MORE】 = append
汉字化
􏾛 : 倒序排列 【MORE】 = reverse
汉字化
􏹊~ : 以同?作为比较来删除第一个寻找到的某元素 【MORE】 = remove
汉字化
􏹊~/􏾗 : 类上，另外比较例程是􏾗? 【MORE】 = remw
汉字化
􏹊~/􏾃 : 类上，另外比较例程是􏾃? 【MORE】 = remv
汉字化
􏹊~/侗 : 类上，另外比较例程是侗? 【MORE】 = remq
汉字化
􏹊^ : 类􏷲，不过入参不同。 【MORE】 = remove*
汉字化
􏹊^/􏾗 : 类上 【MORE】 = remw*
汉字化
􏹊^/􏾃 : 类上 【MORE】 = remv*
汉字化
􏹊^/侗 : 类上 【MORE】 = remq*
汉字化
𠆯 : 将􏿴中元素以指定的规则理顺 【MORE】 = sort
汉字化
􏹋 : 以同作为比较来寻找某元素和其之后的所有元素 【MORE】 = member
汉字化
􏹋/􏾗 : 类上 【MORE】 = memw
汉字化
􏹋/􏾃 : 类上 【MORE】 = memv
汉字化
􏹋/侗 : 类上 【MORE】 = memq
汉字化
􏹅 : 类上 【MORE】 = memf
汉字化
􏹉 : 以同作为比较来寻找阳位是某值的元素 【MORE】 = assoc
汉字化
􏹉/􏾗 : 类上 【MORE】 = assw
汉字化
􏹉/􏾃 : 类上 【MORE】 = assv
汉字化
􏹉/侗 : 类上 【MORE】 = assq
汉字化
􏹄 : 类上 【MORE】 = assf
汉字化
􏹌 : 查找出第一个符合条件的某元素 【MORE】 = findf
汉字化
􏹈 : 查找出所有符合条件的元素 【MORE】 = filter
汉字化
各 : 各个元素依次执行某一个例程 【MORE】 = for-each
汉字化
佫 : 把某一个例程依次作用在各个元素上 【MORE】 = map
汉字化
􏷱 : 各个元素全都是... 【MORE】 = andmap
汉字化
􏷰 : 各个元素有的是... 【MORE】 = ormap
汉字化
垎 : 各个元素作为参数连同上次结果一块依次参与作用到函数上 【MORE】 = foldl
汉字化
右垎 : 从右边起，各个元素作为参数连同上次结果一块依次参与作用到函数上 【MORE】 = foldr
汉字化
阳之阳 : 等同于(阳 (阳 lst)) 【MORE】 = caar
汉字化
阳之阴 : 等同于(阴 (阳 lst)) 【MORE】 = cdar
汉字化
阴之阳 : 等同于(阳 (阴 lst)) 【MORE】 = cadr
汉字化
阴之阴 : 等同于(阴 (阴 lst)) 【MORE】 = cddr
汉字化
阳之阳阳 : 等同于(阳 (阳 (阳 lst))) 【MORE】 = caaar
汉字化
阳之阳阴 : 等同于(阴 (阳 (阳 lst))) 【MORE】 = cdaar
汉字化
阳之阴阳 : 等同于(阳 (阴 (阳 lst))) 【MORE】 = cadar
汉字化
阳之阴阴 : 等同于(阳 (阴 (阳 lst))) 【MORE】 = caadr
汉字化
阴之阴阴 : 等同于(阴 (阴 (阴 lst))) 【MORE】 = caddr
汉字化
阴之阴阳 : 等同于(阳 (阴 (阴 lst))) 【MORE】 = caddr
汉字化
阴之阳阴 : 等同于(阴 (阳 (阴 lst))) 【MORE】 = cdadr
汉字化
阴之阳阳 : 等同于(阳 (阳 (阴 lst))) 【MORE】 = caadr
汉字化
阳之阳阳阳 : 【MORE】 = caaaar
汉字化
阴之阳阳阳 : 【MORE】 = caaadr
汉字化
阳之阴阳阳 : 【MORE】 = caadar
汉字化
阴之阴阳阳 : 【MORE】 = caaddr
汉字化
阳之阳阴阳 : 【MORE】 = cadaar
汉字化
阴之阳阴阳 : 【MORE】 = cadadr
汉字化
阳之阴阴阳 : 【MORE】 = caddar
汉字化
阴之阴阴阳 : 【MORE】 = cadddr
汉字化
阳之阳阳阴 : 【MORE】 = cdaaar
汉字化
阴之阳阳阴 : 【MORE】 = cdaadr
汉字化
阳之阴阳阴 : 【MORE】 = cdadar
汉字化
阴之阴阳阴 : 【MORE】 = cdaddr
汉字化
阳之阳阴阴 : 【MORE】 = cddaar
汉字化
阴之阳阴阴 : 【MORE】 = cddadr
汉字化
阳之阴阴阴 : 【MORE】 = cdddar
汉字化
阴之阴阴阴 : 【MORE】 = cddddr
汉字化
甲 : 第一个的意思，源自中国古代文字记序符号十天干 【MORE】 = first
汉字化
乙 : 第二个的意思，源自中国古代文字记序符号十天干 【MORE】 = second
汉字化
丙 : 与上类似 【MORE】 = third
汉字化
丁 : 与上类似 【MORE】 = fourth
汉字化
戊 : 与上类似 【MORE】 = fifth
汉字化
己 : 与上类似 【MORE】 = sixth
汉字化
庚 : 与上类似 【MORE】 = seventh
汉字化
辛 : 与上类似 【MORE】 = eighth
汉字化
壬 : 与上类似 【MORE】 = ninth
汉字化
癸 : 与上类似 【MORE】 = tenth
汉字化
末 : 与上类似 【MORE】 = last
汉字化
􏹨 : 取出最后一双元素 【MORE】 = last-pair
汉字化
􏼓0 : 构造内容是若干个相同元素的􏿴(ref to: 􏼓) 【MORE】 = make-list
汉字化
攸 : 修改数据中的某个元素为新值并返回新数据 【MORE】 = list-set
汉字化
攸/入 : 类上，另外进参是入 【MORE】 = list-update
汉字化
弓 : 返回􏿴中某个元素的索引 【MORE】 = index-of
汉字化
􏹂 : 类上，另外进参是入 【MORE】 = index-where
汉字化
𰁣 : 类上，另外，返回的是所有符合条件的元素组成的􏿴 【MORE】 = indexes-of
汉字化
􏹁 : 类上，另外进参是入 【MORE】 = indexes-where
汉字化
􏾺 : 从􏿴中左起依次取出来N个元素并组成新􏿴返回 【MORE】 = take
汉字化
𨚞 : 类上，另外是从右边开始操作的 【MORE】 = take-right
汉字化
􏷵 : 从􏿴中的左边依次的去掉N个元素，剩余元素组成􏿴 【MORE】 = drop
汉字化
􏷴 : 类上，另外是从右边开始操作的 【MORE】 = drop-right
汉字化
􏾺/入 : 与􏾺类似，另外进参是入 【MORE】 = takef
汉字化
𨚞/入 : 类上，另外是从右边开始操作的 【MORE】 = takef-right
汉字化
􏷵/入 : 与􏷵类似，另外进参是入 【MORE】 = dropf
汉字化
􏷴/入 : 类上，另外是从右边开始操作的 【MORE】 = dropf-right
汉字化
􏾺分 : 将􏾺和余下分离开（输出结果是一个复值） 【MORE】 = split-at
汉字化
𨚞分 : 类上，另外是从右边开始操作的 【MORE】 = split-at-right
汉字化
􏾺分/入 : 同分􏾺类似，另外参数是入 【MORE】 = splitf-at
汉字化
𨚞分/入 : 类上，另外是从右边开始操作的 【MORE】 = splitf-at-right
汉字化
􏾺于? : 某􏿴是否是某另一􏿴的􏾺 【MORE】 = list-prefix?
汉字化
䢼 : 返回左起相同的元素 【MORE】 = take-common-prefix
汉字化
􏷳分 : 删除左起相同的元素（输出结果是一个复值） 【MORE】 = drop-common-prefix
汉字化
䢼分 : 将䢼和余下分离开（输出结果是一个复值） 【MORE】 = split-common-prefix
汉字化
􏿜 : 把多个􏿴贯穿相连组成一个􏿫并返回之 【MORE】 = append*
汉字化
𰂋 : 􏿴中每两个元素之间都插入另一元素 【MORE】 = add-between
汉字化
偏 : 把􏿴中数据做扁平化处理 【MORE】 = flatten
汉字化
􏾜 : 打乱􏿴中元素顺序 【MORE】 = shuffle
汉字化
重 : 从􏿴中查找出第一个重复的元素并返回之 【MORE】 = check-duplicates
汉字化
𠝤 : 去除掉所有重复的元素并返回新数据 【MORE】 = remove-duplicates
汉字化
􏹇 : 去除掉所有符合条件的元素并返回新数据 【MORE】 = filter-not
汉字化
􏹈分 : 将􏹈和余下的分离开（输出结果是一个复值） 【MORE】 = partition
汉字化
􏹈巨 : 返回􏹈的巨，等同于(巨 (􏹈 lst)) 【MORE】 = count
汉字化
佫􏹈 : 等同于(􏹈 (入 (x) x) (佫 proc lst)) 【MORE】 = filter-map
汉字化
佫􏿝 : 等同于(􏿝 (佫 proc lst)) 【MORE】 = append-map
汉字化
􏼏 : 构造从A到B之间的一段连续数字组成的􏿴（包括A不包括B） 【MORE】 = range
汉字化
􏼏* : 构造从A到B之间的一段连续数字组成的􏿴（包括A也包括B） 【MORE】 = inclusive-range
汉字化
􏿴/组合 : 【MORE】 = combinations
汉字化
􏿴/排列组合 : 【MORE】 = permutations
汉字化
􏿴序列/组合 : 【MORE】 = in-combinations
汉字化
􏿴序列/排列组合 : 【MORE】 = in-permutations
汉字化
佫之􏺗 : 佫之􏺗 【MORE】 = argmax
汉字化
佫之􏺘 : 佫之􏺘 【MORE】 = argmin
汉字化
􏿴/分组 : 【MORE】 = group-by
汉字化
􏿴/笛卡尔积 : 【MORE】 = cartesian-product
汉字化
􏹇~ : 【MORE】 = remf

-----------------------------------------------------------
|    规则     |      含义      |         进出参         |   举例   |
-----------------------------------------------------------
|对􏻿加山/氵中任一者的|   指示内容是否可变   |   是不可或可被增加、删除或修改的   | 􏻼?、􏻽?  |
-----------------------------------------------------------
|   对􏻿加偏旁   | 构造生成特殊元素组成的􏻿 |      出参数据结构是􏻿       | 􏻺、􏻻、􏻹  |
-----------------------------------------------------------
|   左偏旁亻    |相似集（类型相同且元素相似）|出参数据与进参数据相比，类型相同且内容类似|   􏻿𠆯   |
-----------------------------------------------------------
|    扌偏旁    |    指示修改方式    |      直接修改了原始数据      |􏻿􏾩、􏻿􏽒、􏻿挌|
-----------------------------------------------------------
|   以􏻿起头    |     指示入参     |      入参数据是􏻿类数据      |􏻿巨、􏻿弔、􏻿𠆯|
-----------------------------------------------------------
|   以化结尾    |     类型转换     |  出参数据内容不变而类型作小幅度改变  |   􏻼化   |
-----------------------------------------------------------
|   以化联结    |     类型转换     |    出参数据内容不变而类型改变    |􏻿化􏿴、􏿴化􏻿 |
-----------------------------------------------------------
|    +结尾    |      入参      |    入参数据以相同方式多次出现    |  􏻿􏾩+   |
-----------------------------------------------------------
汉字化
􏻿 : 与􏻽同 【MORE】 = vector
汉字化
􏻿? : 是否是􏻿 【MORE】 = vector?
汉字化
􏻺 : 构造构造内容是若干而相同元素的􏻿 【MORE】 = make-vector
汉字化
􏻼 : 构造内容不能被修改的数组 【MORE】 = vector-immutable
汉字化
􏻿巨 : 返回􏻿的长度 【MORE】 = vector-length
汉字化
􏻿弔 : 返回􏻿的某索引处的元素 【MORE】 = vector-ref
汉字化
􏻿􏾩 : 直接修改原数组中某索引处的元素为新值 【MORE】 = vector-set!
汉字化
􏻿化􏿴 : 将􏻿数据转化为􏻿 【MORE】 = vector->list
汉字化
􏿴化􏻿 : 将􏻿数据转化为􏻿 【MORE】 = list->vector
汉字化
􏻼化 : 将􏻽数据转化为􏻼数据 【MORE】 = vector->immutable-vector
汉字化
􏻺𰅡 : 直接修改􏻿数据使其转化成复􏻿数据 【MORE】 = vector-fill!
汉字化
􏻿􏾩/以􏾝 : 从本􏻿的第N处索引的数值开始做修改（以另一个􏻿的􏻿􏾝为内容） 【MORE】 = vector-copy!
汉字化
􏻿􏾝化􏸼 : 将􏻿数据转化为􏸼数据 【MORE】 = vector->values
汉字化
􏻻 : 构造内容是一系列序数的􏻿 【MORE】 = build-vector
汉字化
􏻸? : 􏻿是否是空 【MORE】 = vector-empty?
汉字化
􏻿􏾩+ : 【MORE】 = vector-set*!
汉字化
􏻿佫 : 【MORE】 = vector-map
汉字化
􏻿挌 : 【MORE】 = vector-map!
汉字化
􏻹 : 【MORE】 = vector-append
汉字化
􏻿􏾺 : 【MORE】 = vector-take
汉字化
􏻿𨚞 : 【MORE】 = vector-take-right
汉字化
􏻿􏷵 : 【MORE】 = vector-drop
汉字化
􏻿􏷴 : 【MORE】 = vector-drop-right
汉字化
􏻿􏾺分 : 【MORE】 = vector-split-at
汉字化
􏻿𨚞分 : 【MORE】 = vector-split-at-right
汉字化
􏻿􏾝 : 【MORE】 = vector-copy
汉字化
􏻿􏹈 : 【MORE】 = vector-filter
汉字化
􏻿􏹇 : 【MORE】 = vector-filter-not
汉字化
􏻿􏹈巨 : 【MORE】 = vector-count
汉字化
􏻿佫之􏺗 : 【MORE】 = vector-argmin
汉字化
􏻿佫之􏺘 : 【MORE】 = vector-argmax
汉字化
􏻿弓 : 【MORE】 = vector-member
汉字化
􏻿弓/􏾗 : 【MORE】 = vector-memv
汉字化
􏻿弓/􏾃 : 【MORE】 = vector-memq
汉字化
􏻿𠆯 : 【MORE】 = vector-sort
汉字化
􏻿􏽒 : 【MORE】 = vector-sort!

--------------------------------------------------------------------------------
|    规则     |          指示          |             含义             |      举例      |
--------------------------------------------------------------------------------
|囗/古/舌/亻 + 􏿰|  “􏿰”中“键值对”唯一性的确立方式   |是通过与之对应的同?/􏾗?/􏾃?/侗?中的任一者所确立的|   􏾌、􏾋、􏾊、􏾉    |
--------------------------------------------------------------------------------
|  山/氵 + 􏿰  |    “􏿰”中“键值对”是否可变     |      是不可或可被增加、删除或修改的       |    􏾐?、􏾑?     |
--------------------------------------------------------------------------------
|  ⺮/艹 + 􏿰  |  “􏿰”中“键值对”之“键”的存储方式  |          是刚性或柔性的           |    􏾎?、􏾏?     |
--------------------------------------------------------------------------------
|     亻     |    相似集（类型相同且元素相似）    |   出参数据与进参数据相比，类型相同且内容类似    |      􏿰攸      |
--------------------------------------------------------------------------------
|     阝     |   连续集（类型相同且元素连续相同）   | 出参数据与进参数据相比，类型相同且前者是后者的一部分 |    􏿰􏺈、􏿰􏺇     |
--------------------------------------------------------------------------------
|     刂     |缺失集（删除、移走、去掉部分元素之后的集合）| 出参数据与进参数据相比，类型相同且前者是后者的子集  |    􏿰􏾘、􏿰𠛮     |
--------------------------------------------------------------------------------
|   扌/!结尾   |         修改警示         |    会直接修改原始数据而非另造新数据作输出     |􏿰􏾩、􏿰𫼛、􏿰𫼛、􏿰􏽘、􏿰􏽗|
--------------------------------------------------------------------------------
|    ^结尾    |          入参          |         入参数据是􏿳类数据          | 􏿰^、􏾋^、􏾊^、􏾉^  |
--------------------------------------------------------------------------------
|    +结尾    |          入参          |       入参数据以相同方式多次出现        |   􏿰攸+、􏿰􏾩+    |
--------------------------------------------------------------------------------
汉字化
􏿰 : 创建􏾌 【MORE】 = hash
汉字化
􏾋 : 类上，不过键的唯一性是通过􏾗?确立的 【MORE】 = hashalw
汉字化
􏾊 : 类上，不过键的唯一性是通过􏾃?确立的 【MORE】 = hasheqv
汉字化
􏾉 : 类上，不过键的唯一性是通过侗?确立的 【MORE】 = hasheq
汉字化
􏿰? : 是否是􏾌、􏾋、􏾊、􏾉的任一种 【MORE】 = hash?
汉字化
􏾌? : 是否是􏾌 【MORE】 = hash-equal?
汉字化
􏾋? : 是否是􏾋 【MORE】 = hash-equal-always?
汉字化
􏾊? : 是否是􏾊 【MORE】 = hash-eqv?
汉字化
􏾉? : 是否是􏾉 【MORE】 = hash-eq?
汉字化
􏾎? : 类上，键是否是被刚性存储的 【MORE】 = hash-strong?
汉字化
􏾏? : 类上，键是否是被柔性存储的 【MORE】 = hash-weak?
汉字化
􏾈? : 类上，键的存储是否是采用􏾧 【MORE】 = hash-ephemeron?
汉字化
􏿰^ : 􏿳转换成􏾑 【MORE】 = make-hash
汉字化
􏾋^ : 􏿳转换成􏾑 【MORE】 = make-hashalw
汉字化
􏾊^ : 􏿳转换成􏾑 【MORE】 = make-hasheqv
汉字化
􏾉^ : 􏿳转换成􏾑 【MORE】 = make-hasheq
汉字化
􏾐^ : 如上类推 【MORE】 = make-immutable-hash
汉字化
􏾆^ : 如上类推 【MORE】 = make-immutable-hashalw
汉字化
􏾅^ : 如上类推 【MORE】 = make-immutable-hasheqv
汉字化
􏾄^ : 如上类推 【MORE】 = make-immutable-hasheq
汉字化
􏾏^ : 如上类推 【MORE】 = make-weak-hash
汉字化
􏾁^ : 如上类推 【MORE】 = make-weak-hashalw
汉字化
􏾀^ : 如上类推 【MORE】 = make-weak-hasheqv
汉字化
􏽿^ : 如上类推 【MORE】 = make-weak-hasheq
汉字化
􏾈^ : 如上类推 【MORE】 = make-ephemeron-hash
汉字化
􏽽^ : 如上类推 【MORE】 = make-ephemeron-hashalw
汉字化
􏽼^ : 如上类推 【MORE】 = make-ephemeron-hasheqv
汉字化
􏽻^ : 如上类推 【MORE】 = make-ephemeron-hasheq
汉字化
􏿰攸 : 以新造数据的方式来修改某“键”对应的“值” 【MORE】 = hash-set
汉字化
􏿰攸+ : 以新造数据的方式来修改某些“键”所对应的“值” 【MORE】 = hash-set*
汉字化
􏿰攸/入 : 类上，区别是入参不同 【MORE】 = hash-update
汉字化
􏿰􏾩 : 直接修改某“键”对应的“值” 【MORE】 = hash-set!
汉字化
􏿰􏾩+ : 直接修改某些“键”所对应的“值” 【MORE】 = hash-set*!
汉字化
􏿰􏾩/入 : 类上，区别是入参不同 【MORE】 = hash-update!
汉字化
􏿰弔 : 以“键值对”中“阳”位数据为基准，来索引查询“键值对”并返回“阴”位数据（未找到数据则返回默认设置值）； 【MORE】
 = hash-ref
汉字化
􏿰􏽙 : 以“键值对”中“阳”位数据为基准，来索引查询“键值对”并返回“阳”位数据； 【MORE】 = hash-ref-key
汉字化
􏿰𫼛
 : 以“键值对”中“阳”位数据为基准，来索引查询“键值对”并返回“阴”位数据（未找到数据则直接修改原数据增加新“键值对”）； 【MORE】
 = hash-ref!
汉字化
􏿰日? : 是否存在某“键” 【MORE】 = hash-has-key?
汉字化
􏿰􏾘 : 以新造数据的方式来删除某“键”和其对应的“值” 【MORE】 = hash-remove
汉字化
􏿰􏽘 : 直接删除某“键”和其对应的“值” 【MORE】 = hash-remove!
汉字化
􏿰𠛮 : 以新造数据的方式来删除全部“键”和其对应的“值” 【MORE】 = hash-clear
汉字化
􏿰􏽗 : 直接删除全部“键”和其对应的“值” 【MORE】 = hash-clear!
汉字化
𠛮􏿰 : 以删除全部“键”和其对应的“值”的方式新造空数据 【MORE】 = hash-copy-clear
汉字化
􏿰􏺆 : 把某一个例程依次作用在各个明（键值对）上，出参是􏿴 【MORE】 = hash-map
汉字化
􏿰佫 : 把某一个例程依次作用在各个明（键值对）上 【MORE】 = hash-map/copy
汉字化
􏿰􏺈 : 返回􏿰中所有键值对的“键”组成的􏿴 【MORE】 = hash-keys
汉字化
􏿰􏺇 : 返回􏿰中所有键值对的“值”组成的􏿴 【MORE】 = hash-values
汉字化
􏿰化􏿳 : 【MORE】 = hash->list
汉字化
􏿰􏺈仔? : 前者是否是后者的阳的子集 【MORE】 = hash-keys-subset?
汉字化
􏿰各 : 【MORE】 = hash-for-each
汉字化
􏿰巨 : 【MORE】 = hash-count
汉字化
􏻵? : 【MORE】 = hash-empty?
汉字化
?􏿰引 : 【MORE】 = hash-iterate-first
汉字化
?􏿰继引 : 【MORE】 = hash-iterate-next
汉字化
?􏿰引日 : 【MORE】 = hash-iterate-key
汉字化
?􏿰引月 : 【MORE】 = hash-iterate-value
汉字化
?􏿰引明 : 【MORE】 = hash-iterate-pair
汉字化
?􏿰引日月 : 【MORE】 = hash-iterate-key+value
汉字化
􏾑化 : 将􏾐转化为􏾑 【MORE】 = hash-copy
汉字化
􏿰并 : 【MORE】 = hash-union
汉字化
􏿰并! : 【MORE】 = hash-union!
汉字化
􏿰交! : 【MORE】 = hash-intersect
汉字化
字? : 【MORE】 = char?
汉字化
字化数 : 【MORE】 = char->integer
汉字化
数化字 : 【MORE】 = integer->char
汉字化
字度/utf-8 : 【MORE】 = char-utf-8-length
汉字化
字=? : 【MORE】 = char=?
汉字化
字<? : 【MORE】 = char<?
汉字化
字<=? : 【MORE】 = char<=?
汉字化
字>? : 【MORE】 = char>?
汉字化
字>=? : 【MORE】 = char>=?
汉字化
字=?/ci : 【MORE】 = char-ci=?
汉字化
字<?/ci : 【MORE】 = char-ci<?
汉字化
字<=?/ci : 【MORE】 = char-ci<=?
汉字化
字>?/ci : 【MORE】 = char-ci>?
汉字化
字>=?/ci : 【MORE】 = char-ci>=?
汉字化
字?/英 : 【MORE】 = char-alphabetic?
汉字化
字?/小写 : 【MORE】 = char-lower-case?
汉字化
字?/大写 : 【MORE】 = char-upper-case?
汉字化
字?/标题 : 【MORE】 = char-title-case?
汉字化
数字? : 【MORE】 = char-numeric?
汉字化
字?/符号 : 【MORE】 = char-symbolic?
汉字化
字?/标点 : 【MORE】 = char-punctuation?
汉字化
字?/象形 : 【MORE】 = char-graphic?
汉字化
字?/whitespace : 【MORE】 = char-whitespace?
汉字化
字?/blank : 【MORE】 = char-blank?
汉字化
字?/iso-control : 【MORE】 = char-iso-control?
汉字化
汉字? : 【MORE】 = char-extended-pictographic?
汉字化
字类 : 【MORE】 = char-general-category
汉字化
字属 : 【MORE】 = char-grapheme-break-property
汉字化
ake-known-char-range-list : 【MORE】 = make-known-char-range-list
汉字化
字大写化 : 【MORE】 = char-upcase
汉字化
字小写化 : 【MORE】 = char-downcase
汉字化
字标题化 : 【MORE】 = char-titlecase
汉字化
字标题化* : 【MORE】 = char-foldcase
汉字化
har-grapheme-step : 【MORE】 = char-grapheme-step
汉字化
勺? : 是否是勺结构 【MORE】 = symbol?
汉字化
􏺏? : 是否是􏺏 【MORE】 = symbol-interned?
汉字化
􏺋? : 是否是􏺋 【MORE】 = symbol-unreadable?
汉字化
勺化句 : 将勺转化成句 【MORE】 = symbol->string
汉字化
句化勺 : 将句转化成勺 【MORE】 = string->symbol
汉字化
句化􏺍 : 将句转化成􏺍 【MORE】 = string->uninterned-symbol
汉字化
句化􏺋 : 将句转化成􏺋 【MORE】 = string->unreadable-symbol
汉字化
􏺌 : 生成􏺌 【MORE】 = gensym
汉字化
勺化􏽁 : 勺转化成􏽁 【MORE】 = symbol->immutable-string
汉字化
勾? : 是否是勾结构 【MORE】 = keyword?
汉字化
勾化句 : 将勾转化成句 【MORE】 = keyword->string
汉字化
句化勾 : 将句转化成勾 【MORE】 = string->keyword
汉字化
勾<? : 是否渐大排序 【MORE】 = keyword<?
汉字化
勾化􏽁 : 勾转化成􏽁 【MORE】 = keyword->immutable-string

--------------------------------------
| 规则 | 指示 |  含义  |        举例         |
--------------------------------------
|下偏旁句|指示出参|出参是句结构|    句、􏽀、􏼅、􏼄、􏼃、􏼂    |
--------------------------------------
|右偏旁句|指示出参|出参是句结构|        􏼪、􏼲        |
--------------------------------------
|左偏旁句|指示入参|入参是句结构|􏺕、􏼭、􏼩、􏼳、􏼥、􏼝、􏼛、􏺔、􏺓、􏺒|
--------------------------------------
汉字化
句? : 【MORE】 = string?
汉字化
句 : 创建一个内容可变的字符串数据结构 【MORE】 = string
汉字化
􏼅 : 构造内容是若干个相同元素的句 【MORE】 = make-string
汉字化
􏽁化 : 把􏽀转变为􏽁 【MORE】 = string->immutable-string
汉字化
􏺕 : 句的长度 【MORE】 = string-length
汉字化
􏼭 : 返回句的第N个元素（从0算起） 【MORE】 = string-ref
汉字化
􏼘 : 直接修改原始数据第N处字（从0算起）为某字 【MORE】 = string-set!
汉字化
句􏾝 : 返回句第N到M处内容组成的􏽀 【MORE】 = substring
汉字化
􏽀化 : 把􏽁转化为􏽀 【MORE】 = string-copy
汉字化
􏼘/以􏾝 : 从第N处字（从0算起）开始做覆盖（以另一个句的句􏾝结果为内容） 【MORE】 = string-copy!
汉字化
􏼅𰅡 : 把句的内容全部变成某一个重复的字 【MORE】 = string-fill!
汉字化
􏼃 : 把很多句连成一个􏽀 【MORE】 = string-append
汉字化
􏼁 : 把很多句连成一个􏽁 【MORE】 = string-append-immutable
汉字化
􏼳 : 句化字􏿴：把句转化为􏿴（由字组成） 【MORE】 = string->list
汉字化
􏼲 : 字􏿴化句：把􏿴（由字组成）转化为句 【MORE】 = list->string
汉字化
􏼄 : 构造内容是一系列序数转化成"字"所组成的句 【MORE】 = build-string
汉字化
句=? : 【MORE】 = string=?
汉字化
句<? : 【MORE】 = string<?
汉字化
句<=? : 【MORE】 = string<=?
汉字化
句>? : 【MORE】 = string>?
汉字化
句>=? : 【MORE】 = string>=?
汉字化
句ci=? : 【MORE】 = string-ci=?
汉字化
句ci<? : 【MORE】 = string-ci<?
汉字化
句ci<=? : 【MORE】 = string-ci<=?
汉字化
句ci>? : 【MORE】 = string-ci>?
汉字化
句ci>=? : 【MORE】 = string-ci>=?
汉字化
􏺔 : 将句大写化 【MORE】 = string-upcase
汉字化
􏺓 : 将句小写化 【MORE】 = string-downcase
汉字化
􏺒 : 将句中单词首字母大写化其余小写化 【MORE】 = string-titlecase
汉字化
􏺓* : 将句中单词做CaseFolding处理 【MORE】 = string-foldcase
汉字化
􏼂 : 类􏼱，不过最后一个句是􏿴 【MORE】 = string-append*
汉字化
􏼪 : 把一个􏿴内的各个元素聚集在一块组成句 【MORE】 = string-join
汉字化
􏼩 : 把句分割并组成􏿴 【MORE】 = string-split
汉字化
􏼛 : 内容中的空格回车等字符都简化成一个空格 【MORE】 = string-normalize-spaces
汉字化
􏼥 : 将数据内容的一部分更换成另一部分 【MORE】 = string-replace
汉字化
􏼝 : 修剪句 【MORE】 = string-trim
汉字化
􏼟? : 非空句? 【MORE】 = non-empty-string?
汉字化
􏸶? : 某句是否是某句中间的一部分 【MORE】 = string-contains?
汉字化
􏼹? : 某句是否是某句起头的一部分 【MORE】 = string-prefix?
汉字化
􏼸? : 某句是否是某句末尾的一部分 【MORE】 = string-suffix?
汉字化
􏺃 : 生成代码 【MORE】 = syntax
汉字化
􏺃? : 代码（包含了词法信息和位置信息的数据） 【MORE】 = syntax?
汉字化
卩? : 【MORE】 = identifier?
汉字化
􏹷 : 地址，比如是文件路径 【MORE】 = syntax-source
汉字化
􏹸 : 所在文件的具体哪一行（纬是横向的，参见“纬线”一词） 【MORE】 = syntax-line
汉字化
􏹹 : 所在文件的具体哪一列（经是竖向的，参见“经线”一词） 【MORE】 = syntax-column
汉字化
􏹾 : 所在文件的第几位 【MORE】 = syntax-position
汉字化
􏹵 : 所占用的长度（从0算起） 【MORE】 = syntax-span
汉字化
?syntax-original? : 【MORE】 = syntax-original?
汉字化
?􏺃司 : 【MORE】 = syntax-source-module
汉字化
􏹲 : 以解开􏺃的方式转化成文（（原料数据）） 【MORE】 = syntax-e
汉字化
􏹩 : 􏺃化􏿴 【MORE】 = syntax->list
汉字化
􏹴 : 􏺃化文（将􏺃转化成文（原料数据）） 【MORE】 = syntax->datum
汉字化
􏹳 : 文化􏺃 【MORE】 = datum->syntax
汉字化
?syntax-binding-set? : 【MORE】 = syntax-binding-set?
汉字化
?syntax-binding-set : 【MORE】 = syntax-binding-set
汉字化
?syntax-binding-set->syntax : 【MORE】
 = syntax-binding-set->syntax
汉字化
?syntax-binding-set-extend : 【MORE】 = syntax-binding-set-extend
汉字化
?datum-intern-literal : 【MORE】 = datum-intern-literal
汉字化
?syntax-shift-phase-level : 【MORE】 = syntax-shift-phase-level
汉字化
?generate-temporaries : 【MORE】 = generate-temporaries
汉字化
?identifier-prune-lexical-context : 【MORE】
 = identifier-prune-lexical-context
汉字化
?identifier-prune-to-source-module : 【MORE】
 = identifier-prune-to-source-module
汉字化
?syntax-recertify : 【MORE】 = syntax-recertify
汉字化
?syntax-debug-info : 【MORE】 = syntax-debug-info
汉字化
丫 : 【MORE】 = if
汉字化
􏸣 : 丫 + 一 【MORE】 = when
汉字化
􏸟 : 􏸣 + 非 【MORE】 = unless
汉字化
并 : 【MORE】 = and
汉字化
戈 : 【MORE】 = or
汉字化
肖 : 【MORE】 = case
汉字化
当 : 【MORE】 = cond
汉字化
夬 : 【MORE】 = else
汉字化
非 : 【MORE】 = not
汉字化
並 : 【MORE】 = values
汉字化
𡌶0 : 【MORE】 = call-with-values
汉字化
􏸾 : 並 + 名 【MORE】 = define-values
汉字化
􏸽 : 並 + 令 【MORE】 = let-values
汉字化
入 : 【MORE】 = λ
汉字化
􏸗 : 入 + 肖 【MORE】 = case-lambda
汉字化
名 : 【MORE】 = define
汉字化
令 : 【MORE】 = let
汉字化
𡊤 : 【MORE】 = apply
汉字化
禾? : 禾 + ? 【MORE】 = procedure?
汉字化
秝 : 禾 + 禾 【MORE】 = compose
汉字化
􏸕 : 秝 + 一 【MORE】 = compose1
汉字化
􏸘 : 禾 + 名 + 攵 【MORE】 = procedure-rename
汉字化
𥟍 : 禾 + 非 【MORE】 = negate
汉字化
同? : 【MORE】 = equal?
汉字化
􏾗? : 【MORE】 = equal-always?
汉字化
􏾃? : 【MORE】 = eqv?
汉字化
侗? : 【MORE】 = eq?
汉字化
格 : 【MORE】 = format
汉字化
写 : 【MORE】 = write
汉字化
行写 : 【MORE】 = writeln
汉字化
示 : 【MORE】 = print
汉字化
行示 : 【MORE】 = println
汉字化
陈 : 【MORE】 = display
汉字化
行陈 : 【MORE】 = displayln
汉字化
遍 : 【MORE】 = for
汉字化
遍/􏿴 : 【MORE】 = for/list
汉字化
求 : 【MORE】 = eval
汉字化
无? : 【MORE】 = void?
汉字化
无 : 【MORE】 = void
汉字化
固? : 是否是不可变的 【MORE】 = immutable?
汉字化
报参错 : 【MORE】 = raise-argument-error
