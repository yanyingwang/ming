#lang racket/base

(provide 筛分* 分* 右分* 分*/入 右分*/入 段)
(require "racket/base.rkt" "racket/list.rkt")

(名 (筛分* 例程A 某􏿴)
    (复值参与 (入 () (筛分 例程A 某􏿴))
              􏿴))

(名 (分* 某􏿴 数A)
    (复值参与 (入 () (分 某􏿴 数A))
              􏿴))
(名 (右分* 某􏿴 数A)
    (复值参与 (入 () (右分 某􏿴 数A))
              􏿴))

(名 (分*/入 某􏿴 数A)
    (复值参与 (入 () (分/入 某􏿴 数A))
              􏿴))


(名 (右分*/入 某􏿴 数A)
    (复值参与 (入 () (右分/入 某􏿴 数A))
              􏿴))

(名 (段 LIST0 N1 N2)
    (若非 (精确非负整数? N1)
          (报参错 '段 "精确非负整数?" 1 LIST0 N1))
    (若非 (精确非负整数? N2)
          (报参错 '段 "精确非负整数?" 2 LIST0 N2))
    (令 演 ([某􏿴 LIST0] [序数 0] [数A N1] [数B N2])
        (当 [(= 序数 数B) '()]
            [(< 序数 数A)
             (演 (阴 某􏿴) (加一 序数) 数A 数B)]
            [(且 (>= 序数 数A) (< 序数 数B))
             (双 (阳 某􏿴) (演 (阴 某􏿴) (加一 序数) 数A 数B))])))
